# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
      name: ðŸ’ªðŸ”¥ Angular Build
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [20.x]
      steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
     
      - run: npm ci
      - name: ðŸ’ªðŸ”¥ Install Dependencies
        run: npm install @angular/cli@15
      - name: Build Application
        run: npm run buildProduction
      - name: Upload Dist Path
        uses: actions/upload-artifact@v3
        with:
          path: dist/cma/

  deploy: 
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: ðŸ”¨ Install Dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          npm install
          git reset --hard

      - name: Descargar dist
        uses: actions/download-artifact@v3
        with:
          path: dist/cma/

      - name: ðŸ¦„ View data
        shell: bash
        run: cd dist/cma/artifact/ && dir

      - name: ðŸ“‚ Sync folders and files to the server cpanel
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_HOSTNAME }}
          username: ${{ secrets.FTP_LOGIN }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: dist/cma/artifact/